buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

group = 'com.spaceshift'
version = '2.4.0'

sourceCompatibility = 1.7
targetCompatibility = 1.7

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += '-parameters'
}

ext.rlibVersion = "7.0.0"
ext.jmeVersion = "develop-SNAPSHOT"
ext.junitPlatformVersion = "1.0.0"
ext.junitJupiterVersion = "5.0.0"
ext.log4jVersion = '2.6.2'
ext.bintrayVersion = version

def jme3 = [v: '3.2.1-stable', g: 'org.jmonkeyengine']

junitPlatform {
    filters {
        engines {
        }
        tags {
        }
    }
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://dl.bintray.com/javasabr/maven'
    }
}

publishing {
    publications {
        JmbExtensionArtifact(MavenPublication) {
            from components.java
            groupId 'com.spaceshift'
            artifactId 'jmonkeybuilder-extension'
            version bintrayVersion
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getProperty('bintrayUser')
    key = System.getProperty('bintrayKey')
    publications = ['JmbExtensionArtifact']
    pkg {
        repo = 'maven'
        name = 'com.spaceshift.jmonkeybuilder.extension'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/JavaSaBr/jmonkeybuilder-extension'
        vcsUrl = 'https://github.com/JavaSaBr/jmonkeybuilder-extension.git'
        issueTrackerUrl = 'https://github.com/JavaSaBr/jmonkeybuilder-extension/issues'
        githubRepo = 'JavaSaBr/jmonkeybuilder-extension'
        githubReleaseNotesFile = 'README.md'
        version {
            name = bintrayVersion
            desc = bintrayVersion
            released  = new Date()
        }
    }
}


dependencies {
    compile group: 'org.jetbrains', name: 'annotations', version: '15.0'

    //TODO
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-core:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-effects:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-bullet:$jmeVersion"

    /*compile "${jme3.g}:jme3-core:${jme3.v}"
    compile "${jme3.g}:jme3-effects:${jme3.v}"
    compile "${jme3.g}:jme3-bullet:${jme3.v}"*/

    testCompile "com.spaceshift:rlib.common:$rlibVersion"
    testCompile "org.junit.platform:junit-platform-commons:$junitPlatformVersion"
    testRuntime "org.junit.platform:junit-platform-engine:$junitPlatformVersion"

    //TODO
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-bullet:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-bullet-native:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-lwjgl3:$jmeVersion"

    /*testRuntime "${jme3.g}:jme3-bullet:${jme3.v}"
    testRuntime "${jme3.g}:jme3-bullet-native:${jme3.v}"
    testRuntime "${jme3.g}:jme3-lwjgl3:${jme3.v}"*/

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"

    testRuntime "org.apache.logging.log4j:log4j-core:$log4jVersion"
    testRuntime "org.apache.logging.log4j:log4j-jul:$log4jVersion"

    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
    testCompile "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
}