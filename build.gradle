buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'

group = 'com.spaceshift'
version = '2.1.0'

sourceCompatibility = 1.7
targetCompatibility = 1.7

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += '-parameters'
}

ext.rlibVersion = "6.7.6"
ext.junitPlatformVersion = "1.0.0"
ext.junitJupiterVersion = "5.0.0"
ext.log4jVersion = '2.6.2'
ext.lwjglVersion = "3.1.0"

def jme3 = [v: '3.2.0-stable', g: 'org.jmonkeyengine']

junitPlatform {
    filters {
        engines {
        }
        tags {
        }
    }
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile group: 'org.jetbrains', name: 'annotations', version: '15.0'

    compile "${jme3.g}:jme3-core:${jme3.v}"
    compile "${jme3.g}:jme3-effects:${jme3.v}"
    compile "${jme3.g}:jme3-bullet:${jme3.v}"

    testCompile group: 'com.github.JavaSaBr', name: 'RLib', version: rlibVersion
    testCompile "org.junit.platform:junit-platform-commons:$junitPlatformVersion"
    testRuntime "org.junit.platform:junit-platform-engine:$junitPlatformVersion"

    testRuntime "${jme3.g}:jme3-bullet:${jme3.v}"
    testRuntime "${jme3.g}:jme3-bullet-native:${jme3.v}"
    testRuntime "${jme3.g}:jme3-lwjgl3:${jme3.v}"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"

    testRuntime "org.apache.logging.log4j:log4j-core:$log4jVersion"
    testRuntime "org.apache.logging.log4j:log4j-jul:$log4jVersion"

    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
    testCompile "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
}

defaultTasks 'clean', 'install'

// To specify a license in the pom:
install {
    repositories.mavenInstaller {
        pom.version = version
        pom.artifactId = 'jmonkeybuilder-extension'
        pom.project {
            licenses {
                license {
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }
}